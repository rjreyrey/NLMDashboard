import * as types from '../actions/constants'

export const selectApplication = (app) => ({ type: types.APP_CLICK, payload: app })
export const increaseLoginStep = () => ({ type: types.INCREASE_LOGIN_STEP, payload: null })
export const addApplication = (name) => ({ type: types.ADD_APP, payload: name })
export const findAccount = (account, enterprise, sys, store, branch) => ({ type: types.ACCOUNT_FIND, payload: { account: account, enterprise: enterprise, sys: sys, store: store, branch: branch } })
export const activateSidebar = () => ({ type: types.ACTIVATE_SIDEBAR, payload: null })
export const refreshBrowserControls = (app) => ({ type: types.REFRESH_BROWSER_CONTROLS, payload: app })
export const navigateBack = (webview) => ({ type: types.NAVIGATE_BACK, payload: webview })
export const navigateForward = (webview) => ({ type: types.NAVIGATE_FORWARD, payload: webview })
export const navigateReload = (webview) => ({ type: types.NAVIGATE_RELOAD, payload: webview })
export const showSpinner = (id) => ({ type: types.SHOW_SPINNER, payload: id })
export const hideSpinner = (id) => ({ type: types.HIDE_SPINNER, payload: id })
export const showControls = (webview) => ({ type: types.SHOW_CONTROLS, payload: webview })
export const hideControls = (webview) => ({ type: types.HIDE_CONTROLS, payload: webview })
export const resetControls = (webview) => ({ type: types.RESET_CONTROLS, payload: webview })
export const disableControls = (webview) => ({ type: types.DISABLE_CONTROLS, payload: webview })
export const fetchServicesBegin = () => ({ type: types.FETCH_SERVICES_BEGIN })
export const fetchServicesSuccess = (services) => ({ type: types.FETCH_SERVICES_SUCCESS, payload: services })
export const addTab = (service) => ({ type: types.ADD_TAB, payload: service })
export const closeTab = (tab) => ({ type: types.CLOSE_TAB, payload: tab })
export const clickTab = (tab) => ({ type: types.CLICK_TAB, payload: tab })
export const updateTab = (title, id) => ({type: types.UPDATE_TAB, payload: { title: title, id: id } })
export const newWindowTab = (account, url) => ({ type: types.NEW_WINDOW_TAB, payload: { account: account, url: url } })
export const addWebview = (tab) => ({ type: types.ADD_WEBVIEW, payload: { tab } })
export const deleteWebview = (tab) => ({ type: types.DELETE_WEBVIEW, payload: { tab } })
export const setNewActiveApp = (apps) => ({ type: types.SET_NEW_ACTIVE_APP, payload: { apps } })
export const showEnterpriseSearch = () => ({ type: types.SEARCH_SHOW , payload: null })
export const hideEnterpriseSearch = () => ({ type: types.SEARCH_HIDE , payload: null })
export const searchBeginBranch = (name) => ({ type: types.SEARCH_BEGIN_BRANCH, payload: name })
export const searchSuccessBranch = (data) => ({ type: types.SEARCH_SUCCESS_BRANCH, payload: data })
export const associatedBranches = (data) => ({ type: types.ASSOCIATED_BRANCHES, payload: data })
export const showSettings = () => ({ type: types.SHOW_SETTINGS, payload: null })
export const toggleBetaChannel = () => ({ type: types.TOGGLE_BETA_CHANNEL, payload: null })
export const changeEnvironment = (env) => ({ type: types.CHANGE_ENVRIONMENT, payload: env })
export const closeSettings = () => ({ type: types.CLOSE_SETTINGS, payload: null })
export const relaunchApp = () => ({ type: types.RELAUNCH_APP, payload: null })
export const showLoginLoader = () => ({ type: types.SHOW_LOGIN_LOADER , payload: null })
export const hideLoginLoader = () => ({ type: types.HIDE_LOGIN_LOADER, payload: null })
export const showLoginError = (error) => ({ type: types.SHOW_LOGIN_ERROR, payload: error })
export const showLogin = () => ({ type: types.SHOW_LOGIN, payload: null })
export const hideLogin = () => ({ type: types.HIDE_LOGIN, payload: null })
export const setFullName = (name) => ({ type: types.SET_FULL_NAME, payload: name })
export const changeUsername = (username) => ({ type: types.CHANGE_USERNAME, payload: username })
export const changePassword = (password) => ({ type: types.CHANGE_PASSWORD, payload: password })
export const updateAvailable = () => ({ type: types.UPDATE_AVAILABLE, payload: null })
export const updateError = () => ({ type: types.UPDATE_ERROR, payload: null })
export const updateProgress = (progress) => ({ type: types.UPDATE_PROGRESS, payload: progress })